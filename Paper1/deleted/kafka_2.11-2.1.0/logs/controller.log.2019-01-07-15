[2019-01-07 15:03:15,216] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:03:15,217] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-01-07 15:08:15,217] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:08:15,217] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-01-07 15:13:53,401] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:13:53,402] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-01-07 15:18:53,405] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:18:53,406] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-01-07 15:27:08,757] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:27:08,763] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-01-07 15:27:48,401] INFO [Controller id=0] New topics: [Set(raw_tweets)], deleted topics: [Set()], new partition replica assignment [Map(raw_tweets-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-01-07 15:27:48,401] INFO [Controller id=0] New partition creation callback for raw_tweets-0 (kafka.controller.KafkaController)
[2019-01-07 15:27:48,431] INFO [RequestSendThread controllerId=0] Controller 0 connected to 172.30.219.13:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-01-07 15:30:14,083] INFO [Controller id=0] New topics: [Set(parsed_tweet)], deleted topics: [Set()], new partition replica assignment [Map(parsed_tweet-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-01-07 15:30:14,083] INFO [Controller id=0] New partition creation callback for parsed_tweet-0 (kafka.controller.KafkaController)
[2019-01-07 15:31:24,732] INFO [Controller id=0] New topics: [Set(cleaned_tweet)], deleted topics: [Set()], new partition replica assignment [Map(cleaned_tweet-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-01-07 15:31:24,733] INFO [Controller id=0] New partition creation callback for cleaned_tweet-0 (kafka.controller.KafkaController)
[2019-01-07 15:32:08,761] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:32:08,762] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(raw_tweets-0 -> Vector(0), parsed_tweet-0 -> Vector(0), cleaned_tweet-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-01-07 15:32:08,765] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-01-07 15:32:08,765] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-01-07 15:37:08,768] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:37:08,769] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(raw_tweets-0 -> Vector(0), parsed_tweet-0 -> Vector(0), cleaned_tweet-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-01-07 15:37:08,769] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-01-07 15:37:08,769] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-01-07 15:42:08,771] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:42:08,777] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(raw_tweets-0 -> Vector(0), parsed_tweet-0 -> Vector(0), cleaned_tweet-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-01-07 15:42:08,777] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-01-07 15:42:08,777] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-01-07 15:47:08,780] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:47:08,783] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(raw_tweets-0 -> Vector(0), parsed_tweet-0 -> Vector(0), cleaned_tweet-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-01-07 15:47:08,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-01-07 15:47:08,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-01-07 15:52:08,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:52:08,788] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(raw_tweets-0 -> Vector(0), parsed_tweet-0 -> Vector(0), cleaned_tweet-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-01-07 15:52:08,788] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-01-07 15:52:08,788] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-01-07 15:57:08,790] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-01-07 15:57:08,790] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(raw_tweets-0 -> Vector(0), parsed_tweet-0 -> Vector(0), cleaned_tweet-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-01-07 15:57:08,790] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-01-07 15:57:08,790] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
