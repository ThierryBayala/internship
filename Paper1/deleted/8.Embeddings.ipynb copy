{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Word2Vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('dataset.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "from flask import Flask\n",
    "from kafka import KafkaConsumer\n",
    "from word2vec import *\n",
    "from generator import *\n",
    "import json\n",
    "from time import sleep\n",
    "\n",
    "if __name__ == '__main__':      \n",
    "    word2idx, W, V=train_model('filtered-data')\n",
    "    test_model(word2idx, W, V)\n",
    "    words=['university','school','meningitis']\n",
    "    plot_words(word2idx, W, V, words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "word2idx, W, V=load_model('data')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(word2idx)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Glove"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from glove import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "we = 'glove_model.npz'\n",
    "w2i = 'glove_word2idx.json'\n",
    "main(we, w2i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "npz = np.load(we)\n",
    "W1 = npz['arr_0']\n",
    "W2 = npz['arr_1']\n",
    "with open(w2i) as f:\n",
    "        word2idx = json.load(f)\n",
    "        idx2word = {i:w for w,i in word2idx.items()}\n",
    "for concat in (True, False):\n",
    "    print(\"** concat:\", concat)\n",
    "    if concat:\n",
    "        We = np.hstack([W1, W2.T])\n",
    "    else:\n",
    "        We = (W1 + W2.T) / 2\n",
    "\n",
    "    analogy('university','student','hospital',  'patient', word2idx, idx2word, We)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###########"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd # provide sql-like data manipulation tools. very handy.\n",
    "pd.options.mode.chained_assignment = None\n",
    "import numpy as np # high dimensional vector computing library.\n",
    "from copy import deepcopy\n",
    "from string import punctuation\n",
    "from random import shuffle\n",
    "\n",
    "import gensim\n",
    "from gensim.models.word2vec import Word2Vec # the word2vec model gensim class\n",
    "LabeledSentence = gensim.models.doc2vec.LabeledSentence # we'll talk about this down below\n",
    "\n",
    "from tqdm import tqdm\n",
    "tqdm.pandas(desc=\"progress-bar\")\n",
    "\n",
    "from nltk.tokenize import TweetTokenizer # a tweet tokenizer from nltk.\n",
    "tokenizer = TweetTokenizer()\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dataset loaded with shape (373765, 1)\n"
     ]
    }
   ],
   "source": [
    "def ingest():\n",
    "    data = pd.read_csv('dataset.csv')\n",
    "    data.drop(['Date'], axis=1, inplace=True)\n",
    "    data = data[data.Text.isnull() == False]\n",
    "    #data['Sentiment'] = data['Sentiment'].map(int)\n",
    "    data = data[data['Text'].isnull() == False]\n",
    "    data.reset_index(inplace=True)\n",
    "    data.drop('index', axis=1, inplace=True)\n",
    "    print('dataset loaded with shape', data.shape)    \n",
    "    return data\n",
    "\n",
    "data = ingest()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def tokenize(tweet):\n",
    "    tokens = tokenizer.tokenize(tweet.lower())\n",
    "    try:\n",
    "        tokens = list(filter(lambda t: not t.startswith('@'), tokens))\n",
    "        tokens = list(filter(lambda t: not t.startswith('#'), tokens))\n",
    "        tokens = list(filter(lambda t: not t.startswith('http'), tokens))\n",
    "        tokens = list(filter(lambda t: not t.startswith('www'), tokens))\n",
    "        return tokens\n",
    "    except:\n",
    "        return 'NC'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "progress-bar: 100%|██████████| 300000/300000 [00:26<00:00, 11465.30it/s]\n"
     ]
    }
   ],
   "source": [
    "def postprocess(data, n=300000):\n",
    "    data = data.head(n)\n",
    "    data['tokens'] = data['Text'].progress_map(tokenize)  ## progress_map is a variant of the map function plus a progress bar. Handy to monitor DataFrame creations.\n",
    "    data = data[data.tokens != 'NC']\n",
    "    data.reset_index(inplace=True)\n",
    "    #data.drop('index', inplace=True, axis=1)\n",
    "    return data\n",
    "\n",
    "data = postprocess(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(np.array(data.head(300000).tokens),\n",
    "                                                    np.array(data.head(300000).Text), test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "240000\n"
     ]
    }
   ],
   "source": [
    "print(len(x_train))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "0it [00:00, ?it/s]/Applications/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:5: DeprecationWarning: Call to deprecated `LabeledSentence` (Class will be removed in 4.0.0, use TaggedDocument instead).\n",
      "  \"\"\"\n",
      "240000it [00:01, 120696.04it/s]\n",
      "60000it [00:00, 84076.85it/s] \n"
     ]
    }
   ],
   "source": [
    "def labelizeTweets(tweets, label_type):\n",
    "    labelized = []\n",
    "    for i,v in tqdm(enumerate(tweets)):\n",
    "        label = '%s_%s'%(label_type,i)\n",
    "        labelized.append(LabeledSentence(v, [label]))\n",
    "    return labelized\n",
    "\n",
    "x_train = labelizeTweets(x_train, 'TRAIN')\n",
    "x_test = labelizeTweets(x_test, 'TEST')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LabeledSentence(words=['proposed', 'law', 'would', 'require', 'meningitis', 'vaccine', 'for', 'new', 'college', 'students', ':', 'lawmakers', 'push', 'to', 'requi', '...'], tags=['TRAIN_200'])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train[200]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 240000/240000 [00:00<00:00, 1602069.22it/s]\n",
      "100%|██████████| 240000/240000 [00:00<00:00, 1541081.60it/s]\n",
      "/Applications/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:3: DeprecationWarning: Call to deprecated `iter` (Attribute will be removed in 4.0.0, use self.epochs instead).\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(14336214, 20798115)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tweet_w2v = Word2Vec(size=5, min_count=10)\n",
    "tweet_w2v.build_vocab([x.words for x in tqdm(x_train)])\n",
    "tweet_w2v.train([x.words for x in tqdm(x_train)], total_examples=tweet_w2v.corpus_count, epochs=tweet_w2v.iter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Applications/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:1: DeprecationWarning: Call to deprecated `__getitem__` (Method will be removed in 4.0.0, use self.wv.__getitem__() instead).\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([ 0.2606362 , -0.4838318 , -1.1931194 , -1.3619112 ,  0.48325405],\n",
       "      dtype=float32)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tweet_w2v['meningitis']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Applications/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:1: DeprecationWarning: Call to deprecated `most_similar` (Method will be removed in 4.0.0, use self.wv.most_similar() instead).\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[(\"i've\", 0.9971567392349243),\n",
       " ('once', 0.9958155155181885),\n",
       " ('thought', 0.9935848116874695),\n",
       " ('thinks', 0.9935711622238159),\n",
       " ('myself', 0.9917294383049011),\n",
       " ('because', 0.9905459880828857),\n",
       " ('worst', 0.9895148277282715),\n",
       " ('just', 0.9891921877861023),\n",
       " (\"we've\", 0.9890680909156799),\n",
       " ('heard', 0.9889131784439087)]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tweet_w2v.most_similar('got')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#########"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "building tf-idf matrix ...\n",
      "vocab size : 10950\n"
     ]
    }
   ],
   "source": [
    "print('building tf-idf matrix ...')\n",
    "vectorizer = TfidfVectorizer(analyzer=lambda x: x, min_df=10)\n",
    "matrix = vectorizer.fit_transform([x.words for x in x_train])\n",
    "tfidf = dict(zip(vectorizer.get_feature_names(), vectorizer.idf_))\n",
    "print('vocab size :', len(tfidf))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "def buildWordVector(tokens, size):\n",
    "    vec = np.zeros(size).reshape((1, size))\n",
    "    count = 0.\n",
    "    for word in tokens:\n",
    "        try:\n",
    "            vec += tweet_w2v[word].reshape((1, size)) * tfidf[word]\n",
    "            count += 1.\n",
    "        except KeyError: # handling the case where the token is not\n",
    "                         # in the corpus. useful for testing.\n",
    "            continue\n",
    "    if count != 0:\n",
    "        vec /= count\n",
    "    return vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "0it [00:00, ?it/s]\u001b[A\u001b[A/Applications/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:6: DeprecationWarning: Call to deprecated `__getitem__` (Method will be removed in 4.0.0, use self.wv.__getitem__() instead).\n",
      "  \n",
      "\n",
      "\n",
      "367it [00:00, 3658.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "604it [00:00, 3142.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "865it [00:00, 2961.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "1247it [00:00, 3173.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "1591it [00:00, 3247.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "1944it [00:00, 3324.86it/s]\u001b[A\u001b[A\n",
      "\n",
      "2283it [00:00, 3342.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "2701it [00:00, 3556.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "3099it [00:00, 3673.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "3473it [00:01, 3690.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "3836it [00:01, 3534.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "4187it [00:01, 3347.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "4522it [00:01, 3299.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "4853it [00:01, 3284.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "5217it [00:01, 3380.21it/s]\u001b[A\u001b[A\n",
      "\n",
      "5585it [00:01, 3463.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "5956it [00:01, 3533.08it/s]\u001b[A\u001b[A\n",
      "\n",
      "6311it [00:01, 3534.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "6666it [00:01, 3435.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "7011it [00:02, 3371.43it/s]\u001b[A\u001b[A\n",
      "\n",
      "7350it [00:02, 3354.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "7698it [00:02, 3390.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "8038it [00:02, 3351.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "8374it [00:02, 3281.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "8703it [00:02, 3143.17it/s]\u001b[A\u001b[A\n",
      "\n",
      "9020it [00:02, 2983.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "9412it [00:02, 3213.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "9882it [00:02, 3548.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "10281it [00:03, 3669.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "10694it [00:03, 3795.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "11104it [00:03, 3880.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "11502it [00:03, 3909.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "11917it [00:03, 3976.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "12349it [00:03, 4073.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "12760it [00:03, 3750.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "13143it [00:03, 3642.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "13514it [00:03, 3564.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "13876it [00:03, 3579.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "14238it [00:04, 3419.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "14584it [00:04, 3313.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "14919it [00:04, 3220.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "15244it [00:04, 3059.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "15554it [00:04, 2900.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "15889it [00:04, 3019.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "16267it [00:04, 3212.96it/s]\u001b[A\u001b[A\n",
      "\n",
      "16598it [00:04, 3240.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "16927it [00:04, 3244.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "17255it [00:05, 3129.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "17572it [00:05, 3018.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "17877it [00:05, 2990.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "18183it [00:05, 3009.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "18505it [00:05, 3069.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "18862it [00:05, 3202.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "19271it [00:05, 3424.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "19666it [00:05, 3566.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "20029it [00:05, 3537.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "20387it [00:06, 3275.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "20722it [00:06, 3240.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "21102it [00:06, 3389.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "21473it [00:06, 3478.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "21826it [00:06, 3450.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "22181it [00:06, 3478.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "22577it [00:06, 3608.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "22957it [00:06, 3663.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "23378it [00:06, 3808.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "23762it [00:06, 3451.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "24116it [00:07, 3079.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "24438it [00:07, 2941.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "24743it [00:07, 2917.43it/s]\u001b[A\u001b[A\n",
      "\n",
      "25043it [00:07, 2873.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "25336it [00:07, 2772.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "25654it [00:07, 2880.70it/s]\u001b[A\u001b[A\n",
      "\n",
      "26016it [00:07, 3068.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "26392it [00:07, 3245.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "26753it [00:07, 3345.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "27094it [00:08, 3293.15it/s]\u001b[A\u001b[A\n",
      "\n",
      "27428it [00:08, 3107.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "27744it [00:08, 3028.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "28051it [00:08, 2980.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "28353it [00:08, 2976.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "28653it [00:08, 2959.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "28997it [00:08, 3088.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "29393it [00:08, 3306.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "29767it [00:08, 3425.58it/s]\u001b[A\u001b[A\n",
      "\n",
      "30144it [00:08, 3519.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "30501it [00:09, 3401.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "30846it [00:09, 3326.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "31206it [00:09, 3403.86it/s]\u001b[A\u001b[A\n",
      "\n",
      "31550it [00:09, 3365.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "31889it [00:09, 3363.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "32227it [00:09, 3359.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "32564it [00:09, 3357.21it/s]\u001b[A\u001b[A\n",
      "\n",
      "32901it [00:09, 3254.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "33228it [00:09, 3225.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "33552it [00:10, 3074.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "33862it [00:10, 3015.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "34186it [00:10, 3078.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "34515it [00:10, 3137.18it/s]\u001b[A\u001b[A\n",
      "\n",
      "34834it [00:10, 3146.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "35150it [00:10, 3097.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "35485it [00:10, 3166.72it/s]\u001b[A\u001b[A\n",
      "\n",
      "35804it [00:10, 3170.88it/s]\u001b[A\u001b[A\n",
      "\n",
      "36125it [00:10, 3180.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "36444it [00:10, 3156.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "36761it [00:11, 3017.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "37099it [00:11, 3115.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "37443it [00:11, 3205.17it/s]\u001b[A\u001b[A\n",
      "\n",
      "37766it [00:11, 3174.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "38085it [00:11, 3037.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "38435it [00:11, 3161.17it/s]\u001b[A\u001b[A\n",
      "\n",
      "38757it [00:11, 3177.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "39077it [00:11, 3156.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "39395it [00:11, 3034.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "39704it [00:12, 3049.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "40051it [00:12, 3161.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "40417it [00:12, 3294.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "40750it [00:12, 3146.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "41069it [00:12, 3026.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "41383it [00:12, 3057.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "41740it [00:12, 3169.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "42097it [00:12, 3278.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "42435it [00:12, 3307.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "42768it [00:12, 3303.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "43100it [00:13, 3101.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "43414it [00:13, 2963.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "43715it [00:13, 2964.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "44019it [00:13, 2985.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "44368it [00:13, 3120.19it/s]\u001b[A\u001b[A\n",
      "\n",
      "44736it [00:13, 3265.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "45113it [00:13, 3401.97it/s]\u001b[A\u001b[A\n",
      "\n",
      "45470it [00:13, 3449.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "45839it [00:13, 3518.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "46194it [00:14, 3451.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "46542it [00:14, 3264.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "46872it [00:14, 3179.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "47193it [00:14, 3138.96it/s]\u001b[A\u001b[A\n",
      "\n",
      "47510it [00:14, 3122.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "47824it [00:14, 3009.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "48128it [00:14, 3016.98it/s]\u001b[A\u001b[A\n",
      "\n",
      "48432it [00:14, 3004.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "48764it [00:14, 3091.49it/s]\u001b[A\u001b[A\n",
      "\n",
      "49075it [00:14, 3014.88it/s]\u001b[A\u001b[A\n",
      "\n",
      "49378it [00:15, 2892.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "49696it [00:15, 2971.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "50040it [00:15, 3096.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "50375it [00:15, 3166.48it/s]\u001b[A\u001b[A\n",
      "\n",
      "50725it [00:15, 3258.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "51098it [00:15, 3386.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "51463it [00:15, 3460.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "51812it [00:15, 3345.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "52150it [00:15, 3349.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "52493it [00:16, 3369.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "52840it [00:16, 3397.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "53221it [00:16, 3509.18it/s]\u001b[A\u001b[A\n",
      "\n",
      "53629it [00:16, 3662.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "53999it [00:16, 3637.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "54365it [00:16, 3629.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "54773it [00:16, 3751.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "55190it [00:16, 3865.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "55598it [00:16, 3923.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "56018it [00:16, 3999.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "56437it [00:17, 4054.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "56844it [00:17, 4041.15it/s]\u001b[A\u001b[A\n",
      "\n",
      "57278it [00:17, 4126.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "57692it [00:17, 4055.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "58109it [00:17, 4088.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "58529it [00:17, 4121.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "58942it [00:17, 3956.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "59362it [00:17, 4025.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "59767it [00:17, 4002.48it/s]\u001b[A\u001b[A\n",
      "\n",
      "60169it [00:17, 3912.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "60562it [00:18, 3832.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "60947it [00:18, 3820.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "61330it [00:18, 3774.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "61709it [00:18, 3664.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "62100it [00:18, 3732.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "62475it [00:18, 3722.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "62849it [00:18, 3662.34it/s]\u001b[A\u001b[A\n",
      "\n",
      "63244it [00:18, 3742.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "63634it [00:18, 3788.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "64041it [00:18, 3866.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "64429it [00:19, 3778.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "64808it [00:19, 3701.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "65180it [00:19, 3620.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "65544it [00:19, 3601.21it/s]\u001b[A\u001b[A\n",
      "\n",
      "65908it [00:19, 3612.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "66286it [00:19, 3658.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "66677it [00:19, 3728.22it/s]\u001b[A\u001b[A\n",
      "\n",
      "67051it [00:19, 3489.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "67447it [00:19, 3616.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "67813it [00:20, 3591.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "68175it [00:20, 3594.86it/s]\u001b[A\u001b[A\n",
      "\n",
      "68537it [00:20, 3553.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "68894it [00:20, 3454.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "69242it [00:20, 3461.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "69591it [00:20, 3468.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "69987it [00:20, 3602.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "70372it [00:20, 3671.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "70746it [00:20, 3691.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "71130it [00:20, 3732.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "71505it [00:21, 3710.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "71877it [00:21, 3683.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "72252it [00:21, 3702.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "72623it [00:21, 3618.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "73002it [00:21, 3667.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "73379it [00:21, 3696.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "73750it [00:21, 3695.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "74130it [00:21, 3725.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "74503it [00:21, 3683.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "74892it [00:21, 3740.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "75267it [00:22, 3688.18it/s]\u001b[A\u001b[A\n",
      "\n",
      "75637it [00:22, 3598.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "75998it [00:22, 3530.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "76352it [00:22, 3484.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "76711it [00:22, 3514.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "77064it [00:22, 3448.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "77473it [00:22, 3617.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "77865it [00:22, 3700.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "78257it [00:22, 3763.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "78636it [00:22, 3749.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "79013it [00:23, 3656.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "79381it [00:23, 3652.14it/s]\u001b[A\u001b[A\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "79748it [00:23, 3558.40it/s]\u001b[A\u001b[A\n",
      "\n",
      "80106it [00:23, 3552.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "80504it [00:23, 3670.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "80885it [00:23, 3709.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "81315it [00:23, 3868.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "81724it [00:23, 3930.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "82125it [00:23, 3953.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "82522it [00:24, 3947.49it/s]\u001b[A\u001b[A\n",
      "\n",
      "82918it [00:24, 3878.96it/s]\u001b[A\u001b[A\n",
      "\n",
      "83307it [00:24, 3864.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "83695it [00:24, 3736.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "84071it [00:24, 3681.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "84441it [00:24, 3676.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "84810it [00:24, 3515.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "85214it [00:24, 3656.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "85599it [00:24, 3711.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "85973it [00:24, 3718.75it/s]\u001b[A\u001b[A\n",
      "\n",
      "86347it [00:25, 3709.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "86727it [00:25, 3734.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "87112it [00:25, 3768.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "87495it [00:25, 3786.21it/s]\u001b[A\u001b[A\n",
      "\n",
      "87877it [00:25, 3794.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "88257it [00:25, 3789.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "88652it [00:25, 3834.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "89069it [00:25, 3926.88it/s]\u001b[A\u001b[A\n",
      "\n",
      "89466it [00:25, 3939.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "89868it [00:25, 3962.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "90265it [00:26, 3867.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "90653it [00:26, 3854.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "91040it [00:26, 3701.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "91412it [00:26, 3648.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "91811it [00:26, 3742.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "92205it [00:26, 3798.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "92593it [00:26, 3820.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "92976it [00:26, 3773.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "93382it [00:26, 3853.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "93771it [00:26, 3861.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "94158it [00:27, 3735.97it/s]\u001b[A\u001b[A\n",
      "\n",
      "94537it [00:27, 3750.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "94914it [00:27, 3703.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "95286it [00:27, 3682.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "95655it [00:27, 3521.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "96021it [00:27, 3561.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "96407it [00:27, 3646.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "96788it [00:27, 3692.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "97159it [00:27, 3650.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "97526it [00:28, 3302.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "97864it [00:28, 3076.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "98180it [00:28, 2879.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "98477it [00:28, 2822.49it/s]\u001b[A\u001b[A\n",
      "\n",
      "98766it [00:28, 2749.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "99046it [00:28, 2742.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "99343it [00:28, 2806.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "99627it [00:28, 2792.22it/s]\u001b[A\u001b[A\n",
      "\n",
      "99909it [00:28, 2759.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "100187it [00:29, 2715.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "100460it [00:29, 2694.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "100731it [00:29, 2646.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "100997it [00:29, 2621.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "101297it [00:29, 2724.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "101609it [00:29, 2828.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "101926it [00:29, 2922.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "102245it [00:29, 2994.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "102562it [00:29, 3043.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "102868it [00:29, 2919.19it/s]\u001b[A\u001b[A\n",
      "\n",
      "103163it [00:30, 2757.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "103484it [00:30, 2878.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "103828it [00:30, 3026.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "104201it [00:30, 3207.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "104528it [00:30, 3134.40it/s]\u001b[A\u001b[A\n",
      "\n",
      "104847it [00:30, 3034.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "105188it [00:30, 3135.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "105506it [00:30, 3137.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "105867it [00:30, 3264.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "106197it [00:31, 3229.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "106523it [00:31, 3098.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "106842it [00:31, 3123.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "107157it [00:31, 3005.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "107460it [00:31, 2955.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "107779it [00:31, 3021.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "108083it [00:31, 3014.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "108386it [00:31, 2989.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "108706it [00:31, 3049.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "109012it [00:31, 2979.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "109311it [00:32, 2789.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "109604it [00:32, 2829.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "109929it [00:32, 2943.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "110287it [00:32, 3108.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "110607it [00:32, 3130.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "110944it [00:32, 3197.88it/s]\u001b[A\u001b[A\n",
      "\n",
      "111324it [00:32, 3356.70it/s]\u001b[A\u001b[A\n",
      "\n",
      "111665it [00:32, 3372.42it/s]\u001b[A\u001b[A\n",
      "\n",
      "112005it [00:32, 3261.34it/s]\u001b[A\u001b[A\n",
      "\n",
      "112334it [00:33, 3249.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "112666it [00:33, 3269.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "113058it [00:33, 3440.96it/s]\u001b[A\u001b[A\n",
      "\n",
      "113406it [00:33, 3412.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "113772it [00:33, 3481.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "114131it [00:33, 3510.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "114499it [00:33, 3559.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "114875it [00:33, 3616.58it/s]\u001b[A\u001b[A\n",
      "\n",
      "115264it [00:33, 3693.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "115660it [00:33, 3767.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "116038it [00:34, 3749.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "116414it [00:34, 3703.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "116786it [00:34, 3621.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "117150it [00:34, 3372.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "117500it [00:34, 3409.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "117844it [00:34, 3405.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "118187it [00:34, 3293.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "118583it [00:34, 3466.40it/s]\u001b[A\u001b[A\n",
      "\n",
      "118984it [00:34, 3610.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "119365it [00:34, 3666.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "119735it [00:35, 3619.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "120121it [00:35, 3686.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "120492it [00:35, 3482.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "120844it [00:35, 3442.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "121201it [00:35, 3478.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "121610it [00:35, 3640.40it/s]\u001b[A\u001b[A\n",
      "\n",
      "121984it [00:35, 3668.72it/s]\u001b[A\u001b[A\n",
      "\n",
      "122354it [00:35, 3614.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "122718it [00:35, 3603.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "123080it [00:36, 3515.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "123433it [00:36, 3333.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "123778it [00:36, 3365.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "124117it [00:36, 3186.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "124458it [00:36, 3250.18it/s]\u001b[A\u001b[A\n",
      "\n",
      "124824it [00:36, 3361.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "125190it [00:36, 3444.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "125597it [00:36, 3609.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "126033it [00:36, 3805.56it/s]\u001b[A\u001b[A\n",
      "\n",
      "126420it [00:36, 3816.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "126806it [00:37, 3738.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "127219it [00:37, 3847.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "127607it [00:37, 3696.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "127980it [00:37, 3624.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "128346it [00:37, 3559.08it/s]\u001b[A\u001b[A\n",
      "\n",
      "128705it [00:37, 3474.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "129083it [00:37, 3560.21it/s]\u001b[A\u001b[A\n",
      "\n",
      "129441it [00:37, 3552.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "129798it [00:37, 3532.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "130153it [00:38, 3461.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "130509it [00:38, 3489.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "130865it [00:38, 3509.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "131226it [00:38, 3538.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "131589it [00:38, 3564.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "131966it [00:38, 3622.15it/s]\u001b[A\u001b[A\n",
      "\n",
      "132334it [00:38, 3638.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "132737it [00:38, 3747.08it/s]\u001b[A\u001b[A\n",
      "\n",
      "133113it [00:38, 3742.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "133506it [00:38, 3796.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "133888it [00:39, 3801.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "134269it [00:39, 3696.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "134640it [00:39, 3698.15it/s]\u001b[A\u001b[A\n",
      "\n",
      "135011it [00:39, 3662.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "135378it [00:39, 3618.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "135759it [00:39, 3670.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "136148it [00:39, 3731.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "136539it [00:39, 3783.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "136918it [00:39, 3683.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "137288it [00:40, 3066.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "137665it [00:40, 3247.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "138017it [00:40, 3324.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "138374it [00:40, 3393.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "138751it [00:40, 3496.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "139135it [00:40, 3592.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "139502it [00:40, 3612.75it/s]\u001b[A\u001b[A\n",
      "\n",
      "139899it [00:40, 3711.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "140287it [00:40, 3758.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "140678it [00:40, 3802.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "141061it [00:41, 3762.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "141439it [00:41, 3688.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "141810it [00:41, 3654.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "142177it [00:41, 3532.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "142532it [00:41, 3515.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "142885it [00:41, 3515.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "143271it [00:41, 3611.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "143652it [00:41, 3668.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "144024it [00:41, 3680.35it/s]\u001b[A\u001b[A\n",
      "\n",
      "144393it [00:41, 3630.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "144757it [00:42, 3623.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "145145it [00:42, 3695.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "145516it [00:42, 3565.34it/s]\u001b[A\u001b[A\n",
      "\n",
      "145875it [00:42, 3546.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "146255it [00:42, 3618.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "146618it [00:42, 3613.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "147017it [00:42, 3717.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "147402it [00:42, 3754.22it/s]\u001b[A\u001b[A\n",
      "\n",
      "147779it [00:42, 3750.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "148155it [00:42, 3683.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "148525it [00:43, 3619.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "148888it [00:43, 3589.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "149251it [00:43, 3600.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "149612it [00:43, 3166.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "149939it [00:43, 2911.96it/s]\u001b[A\u001b[A\n",
      "\n",
      "150242it [00:43, 2870.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "150611it [00:43, 3074.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "150966it [00:43, 3202.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "151329it [00:43, 3319.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "151668it [00:44, 3337.56it/s]\u001b[A\u001b[A\n",
      "\n",
      "152007it [00:44, 3276.98it/s]\u001b[A\u001b[A\n",
      "\n",
      "152339it [00:44, 3050.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "152703it [00:44, 3205.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "153030it [00:44, 3210.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "153423it [00:44, 3396.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "153807it [00:44, 3517.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "154180it [00:44, 3578.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "154566it [00:44, 3656.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "154950it [00:45, 3708.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "155324it [00:45, 3673.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "155694it [00:45, 3669.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "156063it [00:45, 3575.19it/s]\u001b[A\u001b[A\n",
      "\n",
      "156422it [00:45, 3536.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "156782it [00:45, 3553.72it/s]\u001b[A\u001b[A\n",
      "\n",
      "157161it [00:45, 3618.86it/s]\u001b[A\u001b[A\n",
      "\n",
      "157561it [00:45, 3724.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "157937it [00:45, 3735.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "158312it [00:45, 3710.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "158684it [00:46, 3706.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "159056it [00:46, 3680.56it/s]\u001b[A\u001b[A\n",
      "\n",
      "159425it [00:46, 3667.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "159792it [00:46, 3533.03it/s]\u001b[A\u001b[A\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "160150it [00:46, 3546.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "160536it [00:46, 3633.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "160920it [00:46, 3691.42it/s]\u001b[A\u001b[A\n",
      "\n",
      "161303it [00:46, 3730.18it/s]\u001b[A\u001b[A\n",
      "\n",
      "161677it [00:46, 3602.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "162039it [00:47, 3425.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "162385it [00:47, 3398.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "162753it [00:47, 3478.42it/s]\u001b[A\u001b[A\n",
      "\n",
      "163119it [00:47, 3529.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "163496it [00:47, 3597.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "163899it [00:47, 3715.49it/s]\u001b[A\u001b[A\n",
      "\n",
      "164273it [00:47, 3589.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "164691it [00:47, 3747.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "165108it [00:47, 3861.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "165517it [00:47, 3927.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "165913it [00:48, 3829.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "166299it [00:48, 3760.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "166690it [00:48, 3803.86it/s]\u001b[A\u001b[A\n",
      "\n",
      "167072it [00:48, 3696.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "167444it [00:48, 3679.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "167814it [00:48, 3667.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "168198it [00:48, 3716.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "168615it [00:48, 3840.98it/s]\u001b[A\u001b[A\n",
      "\n",
      "169007it [00:48, 3862.32it/s]\u001b[A\u001b[A\n",
      "\n",
      "169415it [00:48, 3923.19it/s]\u001b[A\u001b[A\n",
      "\n",
      "169812it [00:49, 3935.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "170207it [00:49, 3851.48it/s]\u001b[A\u001b[A\n",
      "\n",
      "170606it [00:49, 3885.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "170996it [00:49, 3815.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "171379it [00:49, 3615.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "171768it [00:49, 3690.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "172169it [00:49, 3780.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "172582it [00:49, 3878.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "172972it [00:49, 3882.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "173362it [00:50, 3387.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "173715it [00:50, 3428.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "174108it [00:50, 3563.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "174479it [00:50, 3605.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "174849it [00:50, 3633.40it/s]\u001b[A\u001b[A\n",
      "\n",
      "175251it [00:50, 3739.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "175650it [00:50, 3811.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "176048it [00:50, 3860.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "176449it [00:50, 3903.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "176841it [00:50, 3836.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "177227it [00:51, 3831.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "177612it [00:51, 3810.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "178010it [00:51, 3856.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "178397it [00:51, 3694.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "178769it [00:51, 3481.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "179133it [00:51, 3525.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "179489it [00:51, 3497.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "179841it [00:51, 3445.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "180196it [00:51, 3473.15it/s]\u001b[A\u001b[A\n",
      "\n",
      "180545it [00:51, 3391.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "180886it [00:52, 3327.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "181220it [00:52, 3296.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "181551it [00:52, 3200.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "181873it [00:52, 3187.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "182217it [00:52, 3258.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "182583it [00:52, 3367.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "182984it [00:52, 3535.35it/s]\u001b[A\u001b[A\n",
      "\n",
      "183389it [00:52, 3675.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "183763it [00:52, 3693.17it/s]\u001b[A\u001b[A\n",
      "\n",
      "184135it [00:53, 3689.58it/s]\u001b[A\u001b[A\n",
      "\n",
      "184506it [00:53, 3672.40it/s]\u001b[A\u001b[A\n",
      "\n",
      "184876it [00:53, 3679.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "185245it [00:53, 3611.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "185608it [00:53, 3587.56it/s]\u001b[A\u001b[A\n",
      "\n",
      "185985it [00:53, 3640.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "186387it [00:53, 3744.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "186784it [00:53, 3807.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "187184it [00:53, 3862.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "187580it [00:53, 3891.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "187970it [00:54, 3831.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "188354it [00:54, 3722.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "188771it [00:54, 3845.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "189158it [00:54, 3749.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "189535it [00:54, 3745.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "189934it [00:54, 3813.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "190331it [00:54, 3857.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "190735it [00:54, 3907.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "191134it [00:54, 3931.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "191529it [00:54, 3934.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "191923it [00:55, 3908.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "192315it [00:55, 3832.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "192699it [00:55, 3832.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "193083it [00:55, 3709.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "193472it [00:55, 3760.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "193874it [00:55, 3833.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "194268it [00:55, 3864.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "194656it [00:55, 3680.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "195027it [00:55, 3439.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "195376it [00:56, 3344.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "195715it [00:56, 3315.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "196144it [00:56, 3557.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "196549it [00:56, 3690.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "196926it [00:56, 3713.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "197323it [00:56, 3786.20it/s]\u001b[A\u001b[A\n",
      "\n",
      "197743it [00:56, 3899.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "198137it [00:56, 3853.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "198525it [00:56, 3736.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "198923it [00:56, 3804.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "199306it [00:57, 3613.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "199671it [00:57, 3404.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "200019it [00:57, 3424.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "200365it [00:57, 3389.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "200716it [00:57, 3423.51it/s]\u001b[A\u001b[A\n",
      "\n",
      "201062it [00:57, 3432.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "201460it [00:57, 3580.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "201852it [00:57, 3674.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "202222it [00:57, 3674.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "202592it [00:58, 3527.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "202948it [00:58, 3422.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "203381it [00:58, 3650.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "203752it [00:58, 3639.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "204124it [00:58, 3662.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "204503it [00:58, 3697.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "204915it [00:58, 3812.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "205301it [00:58, 3824.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "205692it [00:58, 3849.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "206087it [00:58, 3878.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "206476it [00:59, 3850.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "206862it [00:59, 3761.92it/s]\u001b[A\u001b[A\n",
      "\n",
      "207260it [00:59, 3823.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "207644it [00:59, 3717.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "208024it [00:59, 3740.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "208426it [00:59, 3819.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "208809it [00:59, 3813.17it/s]\u001b[A\u001b[A\n",
      "\n",
      "209213it [00:59, 3877.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "209602it [00:59, 3774.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "210009it [00:59, 3856.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "210396it [01:00, 3773.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "210775it [01:00, 3674.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "211144it [01:00, 3547.22it/s]\u001b[A\u001b[A\n",
      "\n",
      "211501it [01:00, 3445.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "211848it [01:00, 3376.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "212230it [01:00, 3496.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "212636it [01:00, 3647.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "213031it [01:00, 3732.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "213434it [01:00, 3814.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "213818it [01:01, 3811.88it/s]\u001b[A\u001b[A\n",
      "\n",
      "214201it [01:01, 3370.97it/s]\u001b[A\u001b[A\n",
      "\n",
      "214549it [01:01, 3384.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "214912it [01:01, 3452.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "215299it [01:01, 3564.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "215708it [01:01, 3706.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "216101it [01:01, 3765.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "216485it [01:01, 3786.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "216867it [01:01, 3769.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "217277it [01:01, 3860.98it/s]\u001b[A\u001b[A\n",
      "\n",
      "217665it [01:02, 3762.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "218044it [01:02, 3699.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "218416it [01:02, 3660.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "218784it [01:02, 3589.99it/s]\u001b[A\u001b[A\n",
      "\n",
      "219145it [01:02, 3528.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "219499it [01:02, 3437.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "219886it [01:02, 3556.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "220244it [01:02, 3544.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "220600it [01:02, 3529.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "220965it [01:03, 3564.32it/s]\u001b[A\u001b[A\n",
      "\n",
      "221323it [01:03, 3552.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "221683it [01:03, 3565.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "222040it [01:03, 3131.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "222364it [01:03, 3033.52it/s]\u001b[A\u001b[A\n",
      "\n",
      "222675it [01:03, 2977.58it/s]\u001b[A\u001b[A\n",
      "\n",
      "222979it [01:03, 2942.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "223281it [01:03, 2955.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "223640it [01:03, 3119.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "223974it [01:03, 3181.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "224309it [01:04, 3229.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "224635it [01:04, 3201.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "224957it [01:04, 2963.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "225259it [01:04, 2839.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "225548it [01:04, 2836.00it/s]\u001b[A\u001b[A\n",
      "\n",
      "225857it [01:04, 2907.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "226169it [01:04, 2967.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "226484it [01:04, 3019.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "226836it [01:04, 3152.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "227190it [01:05, 3259.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "227529it [01:05, 3296.75it/s]\u001b[A\u001b[A\n",
      "\n",
      "227911it [01:05, 3435.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "228286it [01:05, 3522.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "228641it [01:05, 3393.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "228984it [01:05, 3322.86it/s]\u001b[A\u001b[A\n",
      "\n",
      "229341it [01:05, 3391.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "229765it [01:05, 3607.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "230135it [01:05, 3633.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "230527it [01:05, 3714.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "230924it [01:06, 3786.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "231306it [01:06, 3242.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "231676it [01:06, 3366.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "232026it [01:06, 3403.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "232420it [01:06, 3547.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "232802it [01:06, 3624.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "233197it [01:06, 3716.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "233592it [01:06, 3781.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "233974it [01:06, 3661.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "234368it [01:07, 3739.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "234745it [01:07, 3628.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "235111it [01:07, 3567.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "235470it [01:07, 3448.19it/s]\u001b[A\u001b[A\n",
      "\n",
      "235818it [01:07, 3406.42it/s]\u001b[A\u001b[A\n",
      "\n",
      "236179it [01:07, 3464.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "236534it [01:07, 3488.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "236884it [01:07, 3399.56it/s]\u001b[A\u001b[A\n",
      "\n",
      "237226it [01:07, 3404.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "237621it [01:07, 3551.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "237979it [01:08, 3105.80it/s]\u001b[A\u001b[A\n",
      "\n",
      "238357it [01:08, 3279.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "238696it [01:08, 3269.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "239060it [01:08, 3371.72it/s]\u001b[A\u001b[A\n",
      "\n",
      "239443it [01:08, 3495.84it/s]\u001b[A\u001b[A\n",
      "\n",
      "239835it [01:08, 3611.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "240000it [01:08, 3494.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "0it [00:00, ?it/s]\u001b[A\u001b[A/Applications/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:6: DeprecationWarning: Call to deprecated `__getitem__` (Method will be removed in 4.0.0, use self.wv.__getitem__() instead).\n",
      "  \n",
      "\n",
      "\n",
      "294it [00:00, 2937.09it/s]\u001b[A\u001b[A\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "612it [00:00, 3004.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "942it [00:00, 3086.42it/s]\u001b[A\u001b[A\n",
      "\n",
      "1266it [00:00, 3129.08it/s]\u001b[A\u001b[A\n",
      "\n",
      "1617it [00:00, 3233.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "1987it [00:00, 3358.72it/s]\u001b[A\u001b[A\n",
      "\n",
      "2377it [00:00, 3504.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "2743it [00:00, 3548.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "3084it [00:00, 3466.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "3421it [00:01, 3426.32it/s]\u001b[A\u001b[A\n",
      "\n",
      "3757it [00:01, 3304.70it/s]\u001b[A\u001b[A\n",
      "\n",
      "4111it [00:01, 3367.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "4446it [00:01, 3342.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "4779it [00:01, 3332.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "5154it [00:01, 3447.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "5500it [00:01, 3310.06it/s]\u001b[A\u001b[A\n",
      "\n",
      "5833it [00:01, 3155.04it/s]\u001b[A\u001b[A\n",
      "\n",
      "6151it [00:01, 3095.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "6463it [00:01, 2985.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "6764it [00:02, 2792.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "7048it [00:02, 2701.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "7322it [00:02, 2656.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "7591it [00:02, 2546.85it/s]\u001b[A\u001b[A\n",
      "\n",
      "7937it [00:02, 2765.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "8294it [00:02, 2965.48it/s]\u001b[A\u001b[A\n",
      "\n",
      "8689it [00:02, 3204.75it/s]\u001b[A\u001b[A\n",
      "\n",
      "9022it [00:02, 3192.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "9350it [00:02, 3117.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "9669it [00:03, 2816.98it/s]\u001b[A\u001b[A\n",
      "\n",
      "9961it [00:03, 2701.70it/s]\u001b[A\u001b[A\n",
      "\n",
      "10240it [00:03, 2607.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "10507it [00:03, 2491.13it/s]\u001b[A\u001b[A\n",
      "\n",
      "10762it [00:03, 2385.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "11006it [00:03, 2347.83it/s]\u001b[A\u001b[A\n",
      "\n",
      "11258it [00:03, 2392.91it/s]\u001b[A\u001b[A\n",
      "\n",
      "11531it [00:03, 2481.21it/s]\u001b[A\u001b[A\n",
      "\n",
      "11783it [00:03, 2492.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "12035it [00:04, 2480.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "12292it [00:04, 2505.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "12598it [00:04, 2649.44it/s]\u001b[A\u001b[A\n",
      "\n",
      "12866it [00:04, 2525.25it/s]\u001b[A\u001b[A\n",
      "\n",
      "13122it [00:04, 2461.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "13387it [00:04, 2513.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "13660it [00:04, 2573.77it/s]\u001b[A\u001b[A\n",
      "\n",
      "13920it [00:04, 2537.43it/s]\u001b[A\u001b[A\n",
      "\n",
      "14193it [00:04, 2589.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "14454it [00:05, 2540.26it/s]\u001b[A\u001b[A\n",
      "\n",
      "14713it [00:05, 2553.74it/s]\u001b[A\u001b[A\n",
      "\n",
      "14976it [00:05, 2575.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "15239it [00:05, 2589.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "15525it [00:05, 2662.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "15793it [00:05, 2609.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "16083it [00:05, 2689.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "16378it [00:05, 2761.81it/s]\u001b[A\u001b[A\n",
      "\n",
      "16683it [00:05, 2841.69it/s]\u001b[A\u001b[A\n",
      "\n",
      "16979it [00:05, 2874.19it/s]\u001b[A\u001b[A\n",
      "\n",
      "17268it [00:06, 2785.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "17548it [00:06, 2746.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "17829it [00:06, 2763.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "18110it [00:06, 2776.27it/s]\u001b[A\u001b[A\n",
      "\n",
      "18419it [00:06, 2862.71it/s]\u001b[A\u001b[A\n",
      "\n",
      "18742it [00:06, 2963.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "19093it [00:06, 3107.18it/s]\u001b[A\u001b[A\n",
      "\n",
      "19448it [00:06, 3227.16it/s]\u001b[A\u001b[A\n",
      "\n",
      "19787it [00:06, 3274.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "20117it [00:06, 3180.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "20438it [00:07, 3095.22it/s]\u001b[A\u001b[A\n",
      "\n",
      "20750it [00:07, 3087.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "21071it [00:07, 3121.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "21478it [00:07, 3355.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "21904it [00:07, 3583.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "22363it [00:07, 3834.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "22834it [00:07, 4059.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "23300it [00:07, 4219.62it/s]\u001b[A\u001b[A\n",
      "\n",
      "23732it [00:07, 4100.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "24151it [00:07, 4124.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "24603it [00:08, 4234.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "25031it [00:08, 4243.90it/s]\u001b[A\u001b[A\n",
      "\n",
      "25459it [00:08, 4082.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "25871it [00:08, 4001.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "26274it [00:08, 3638.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "26647it [00:08, 3233.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "26985it [00:08, 3165.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "27312it [00:08, 3123.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "27632it [00:09, 3033.07it/s]\u001b[A\u001b[A\n",
      "\n",
      "27941it [00:09, 2871.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "28234it [00:09, 2877.47it/s]\u001b[A\u001b[A\n",
      "\n",
      "28526it [00:09, 2831.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "28813it [00:09, 2758.66it/s]\u001b[A\u001b[A\n",
      "\n",
      "29143it [00:09, 2900.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "29509it [00:09, 3092.36it/s]\u001b[A\u001b[A\n",
      "\n",
      "29899it [00:09, 3296.87it/s]\u001b[A\u001b[A\n",
      "\n",
      "30305it [00:09, 3493.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "30664it [00:09, 3457.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "31016it [00:10, 3308.32it/s]\u001b[A\u001b[A\n",
      "\n",
      "31387it [00:10, 3418.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "31773it [00:10, 3538.05it/s]\u001b[A\u001b[A\n",
      "\n",
      "32151it [00:10, 3605.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "32515it [00:10, 3502.32it/s]\u001b[A\u001b[A\n",
      "\n",
      "32869it [00:10, 3432.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "33225it [00:10, 3469.34it/s]\u001b[A\u001b[A\n",
      "\n",
      "33607it [00:10, 3566.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "33966it [00:10, 3572.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "34325it [00:10, 3498.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "34685it [00:11, 3527.12it/s]\u001b[A\u001b[A\n",
      "\n",
      "35039it [00:11, 3425.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "35383it [00:11, 3345.11it/s]\u001b[A\u001b[A\n",
      "\n",
      "35767it [00:11, 3477.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "36156it [00:11, 3589.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "36518it [00:11, 3595.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "36913it [00:11, 3693.93it/s]\u001b[A\u001b[A\n",
      "\n",
      "37298it [00:11, 3738.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "37701it [00:11, 3821.03it/s]\u001b[A\u001b[A\n",
      "\n",
      "38085it [00:12, 3770.60it/s]\u001b[A\u001b[A\n",
      "\n",
      "38474it [00:12, 3804.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "38892it [00:12, 3908.70it/s]\u001b[A\u001b[A\n",
      "\n",
      "39285it [00:12, 3883.29it/s]\u001b[A\u001b[A\n",
      "\n",
      "39700it [00:12, 3957.39it/s]\u001b[A\u001b[A\n",
      "\n",
      "40151it [00:12, 4106.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "40621it [00:12, 4267.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "41074it [00:12, 4342.61it/s]\u001b[A\u001b[A\n",
      "\n",
      "41523it [00:12, 4383.89it/s]\u001b[A\u001b[A\n",
      "\n",
      "41964it [00:12, 4344.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "42400it [00:13, 4172.59it/s]\u001b[A\u001b[A\n",
      "\n",
      "42821it [00:13, 4182.57it/s]\u001b[A\u001b[A\n",
      "\n",
      "43251it [00:13, 4216.30it/s]\u001b[A\u001b[A\n",
      "\n",
      "43674it [00:13, 4218.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "44097it [00:13, 4202.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "44539it [00:13, 4264.23it/s]\u001b[A\u001b[A\n",
      "\n",
      "44967it [00:13, 3927.67it/s]\u001b[A\u001b[A\n",
      "\n",
      "45366it [00:13, 3567.78it/s]\u001b[A\u001b[A\n",
      "\n",
      "45734it [00:13, 3254.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "46073it [00:14, 2962.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "46384it [00:14, 2919.88it/s]\u001b[A\u001b[A\n",
      "\n",
      "46686it [00:14, 2790.97it/s]\u001b[A\u001b[A\n",
      "\n",
      "46974it [00:14, 2736.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "47254it [00:14, 2699.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "47529it [00:14, 2713.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "47832it [00:14, 2796.35it/s]\u001b[A\u001b[A\n",
      "\n",
      "48132it [00:14, 2852.53it/s]\u001b[A\u001b[A\n",
      "\n",
      "48432it [00:14, 2892.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "48729it [00:15, 2897.72it/s]\u001b[A\u001b[A\n",
      "\n",
      "49033it [00:15, 2937.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "49341it [00:15, 2977.64it/s]\u001b[A\u001b[A\n",
      "\n",
      "49640it [00:15, 2859.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "49928it [00:15, 2811.38it/s]\u001b[A\u001b[A\n",
      "\n",
      "50246it [00:15, 2910.24it/s]\u001b[A\u001b[A\n",
      "\n",
      "50594it [00:15, 3058.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "50981it [00:15, 3263.32it/s]\u001b[A\u001b[A\n",
      "\n",
      "51338it [00:15, 3349.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "51709it [00:15, 3449.55it/s]\u001b[A\u001b[A\n",
      "\n",
      "52059it [00:16, 3230.33it/s]\u001b[A\u001b[A\n",
      "\n",
      "52388it [00:16, 3104.50it/s]\u001b[A\u001b[A\n",
      "\n",
      "52704it [00:16, 2997.31it/s]\u001b[A\u001b[A\n",
      "\n",
      "53019it [00:16, 3038.28it/s]\u001b[A\u001b[A\n",
      "\n",
      "53326it [00:16, 2897.63it/s]\u001b[A\u001b[A\n",
      "\n",
      "53620it [00:16, 2878.54it/s]\u001b[A\u001b[A\n",
      "\n",
      "53975it [00:16, 3049.73it/s]\u001b[A\u001b[A\n",
      "\n",
      "54285it [00:16, 2984.01it/s]\u001b[A\u001b[A\n",
      "\n",
      "54587it [00:16, 2804.82it/s]\u001b[A\u001b[A\n",
      "\n",
      "54873it [00:17, 2544.10it/s]\u001b[A\u001b[A\n",
      "\n",
      "55136it [00:17, 2551.09it/s]\u001b[A\u001b[A\n",
      "\n",
      "55418it [00:17, 2623.79it/s]\u001b[A\u001b[A\n",
      "\n",
      "55703it [00:17, 2686.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "56041it [00:17, 2862.94it/s]\u001b[A\u001b[A\n",
      "\n",
      "56333it [00:17, 2789.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "56617it [00:17, 2642.08it/s]\u001b[A\u001b[A\n",
      "\n",
      "56886it [00:17, 2581.70it/s]\u001b[A\u001b[A\n",
      "\n",
      "57149it [00:17, 2594.14it/s]\u001b[A\u001b[A\n",
      "\n",
      "57476it [00:18, 2764.95it/s]\u001b[A\u001b[A\n",
      "\n",
      "57798it [00:18, 2886.76it/s]\u001b[A\u001b[A\n",
      "\n",
      "58144it [00:18, 3037.41it/s]\u001b[A\u001b[A\n",
      "\n",
      "58454it [00:18, 3046.65it/s]\u001b[A\u001b[A\n",
      "\n",
      "58776it [00:18, 3096.37it/s]\u001b[A\u001b[A\n",
      "\n",
      "59089it [00:18, 2916.68it/s]\u001b[A\u001b[A\n",
      "\n",
      "59385it [00:18, 2929.02it/s]\u001b[A\u001b[A\n",
      "\n",
      "59681it [00:18, 2865.46it/s]\u001b[A\u001b[A\n",
      "\n",
      "59986it [00:18, 2917.45it/s]\u001b[A\u001b[A\n",
      "\n",
      "60000it [00:18, 3177.12it/s]\u001b[A\u001b[A"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import scale\n",
    "train_vecs_w2v = np.concatenate([buildWordVector(z, 5) for z in tqdm(map(lambda x: x.words, x_train))])\n",
    "train_vecs_w2v = scale(train_vecs_w2v)\n",
    "\n",
    "test_vecs_w2v = np.concatenate([buildWordVector(z, 5) for z in tqdm(map(lambda x: x.words, x_test))])\n",
    "test_vecs_w2v = scale(test_vecs_w2v)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/9\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "could not convert string to float: 'U.S. death toll rises to in meningitis outbreak http://'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-29-0887e89af80e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m               metrics=['accuracy'])\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_vecs_w2v\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/Applications/anaconda3/lib/python3.6/site-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, **kwargs)\u001b[0m\n\u001b[1;32m   1037\u001b[0m                                         \u001b[0minitial_epoch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minitial_epoch\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1038\u001b[0m                                         \u001b[0msteps_per_epoch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msteps_per_epoch\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1039\u001b[0;31m                                         validation_steps=validation_steps)\n\u001b[0m\u001b[1;32m   1040\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1041\u001b[0m     def evaluate(self, x=None, y=None,\n",
      "\u001b[0;32m/Applications/anaconda3/lib/python3.6/site-packages/keras/engine/training_arrays.py\u001b[0m in \u001b[0;36mfit_loop\u001b[0;34m(model, f, ins, out_labels, batch_size, epochs, verbose, callbacks, val_f, val_ins, shuffle, callback_metrics, initial_epoch, steps_per_epoch, validation_steps)\u001b[0m\n\u001b[1;32m    197\u001b[0m                     \u001b[0mins_batch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mins_batch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 199\u001b[0;31m                 \u001b[0mouts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mins_batch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    200\u001b[0m                 \u001b[0mouts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mouts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    201\u001b[0m                 \u001b[0;32mfor\u001b[0m \u001b[0ml\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mo\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout_labels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mouts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Applications/anaconda3/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m   2713\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_legacy_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2714\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2715\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2716\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2717\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mpy_any\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mis_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Applications/anaconda3/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m   2653\u001b[0m                 array_vals.append(\n\u001b[1;32m   2654\u001b[0m                     np.asarray(value,\n\u001b[0;32m-> 2655\u001b[0;31m                                dtype=tf.as_dtype(tensor.dtype).as_numpy_dtype))\n\u001b[0m\u001b[1;32m   2656\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeed_dict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2657\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;32min\u001b[0m \u001b[0msorted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeed_dict\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeys\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Applications/anaconda3/lib/python3.6/site-packages/numpy/core/numeric.py\u001b[0m in \u001b[0;36masarray\u001b[0;34m(a, dtype, order)\u001b[0m\n\u001b[1;32m    499\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    500\u001b[0m     \"\"\"\n\u001b[0;32m--> 501\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    502\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    503\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'U.S. death toll rises to in meningitis outbreak http://'"
     ]
    }
   ],
   "source": [
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Activation\n",
    "model = Sequential()\n",
    "model.add(Dense(32, activation='relu', input_dim=5))\n",
    "model.add(Dense(1, activation='sigmoid'))\n",
    "model.compile(optimizer='rmsprop',\n",
    "              loss='binary_crossentropy',\n",
    "              metrics=['accuracy'])\n",
    "\n",
    "model.fit(train_vecs_w2v, y_train, epochs=9, batch_size=32, verbose=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "score = model.evaluate(test_vecs_w2v, y_test, batch_size=128, verbose=2)\n",
    "print score[1]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
